import logging
import pytest
from utils.screenshot_utils import capture_full_page_screenshot
from pages.customer_page import CustomerRegistrationPage
from utils.data_loader import customer_test_data

@pytest.mark.parametrize("customer_test_case",customer_test_data("../data/customer_test_data_valid.json"))

def test_TC_CUST_REG_01(browser_config, customer_test_case):
    register.info("TC_CUST_REG_001.py Started..")
    driver, wait = browser_config

    # create object for CustomerRegistrationPage class

    customer_page = CustomerRegistrationPage(driver,wait)

    # 1. Click open your account button

    try:
        customer_page.open_your_account_button(customer_test_case["homeRegisterCustomerBtnMain"])
        logging.info("Customer open your button successfully.")
    except Exception as e:
        logging.info("Element 'open your button' not found with Explicit wait.")
        pytest.fail("Test Failed.Bug found for open your button !!!")

    # 2. Enter a valid full name
    try:
        customer_page.enter_full_name(customer_test_case["customerNameReg"])
         logging.info("Customer Full Name successfully.")
    except Exception as e:
         logging.info("Element 'Full name' not found with Explicit wait.")
        pytest.fail("Test Failed.Bug found for Full Name !!!")

    # 3.  Enter a valid email
    try:
        customer_page.enter_email_address(customer_test_case["customerEmailReg"])
         logging.info("Ticket Class Silver - $750 selected.")
    except Exception as e:
         logging.info("Element 'Customer email' not found with Explicit wait.")
        pytest.fail("Test Failed.Bug found for Ticket Class !!!")

    # 4. Enter a valid password
    try:
        customer_page.enter_valid_password(customer_test_case["customerPasswordReg"])
         logging.info("Registered User enter password.")

    except Exception as e:
         logging.info("Element 'Register User Password' not found with Explicit wait.")
        pytest.fail("Test Failed.Bug found for Register User !!!")

    # 5. Enter a valid initial deposit
    try:
        customer_page.enter_initial_deposit(customer_test_case["initialDepositReg"])
         logging.info("Valid initial deposit Enter successfully.")

    except Exception as e:
         logging.info("Element 'Initial deposit' not found with Explicit wait.")
        pytest.fail("Test Failed.Bug found for Promo Code !!!")

    # 6. Click on the "Register" button.
    try:
        customer_page.click_register_button()
         logging.info("Click on Register button successfully.")

    except Exception as e:
         logging.info("Element 'Register' button not found with Explicit wait.")
        pytest.fail("Test Failed.Bug found for Book Now Button !!!")


    # Validate successful message
    expected_successful_message = "Customer registered! Please login."

    if expected_successful_message == customer_page.expected_successful_message():
         logging.info("Test Passed. Expected message match with Actual message.")
         logging.info("TC_CUST_REG_001 Completed..")

    else:
         logging.info("Test Failed. Expected message does not match with Actual message.")
        # Screenshot
        capture_full_page_screenshot(driver, "TC_CUST_REG_01")

    logging.info("TC_CUST_REG_01 Completed..")